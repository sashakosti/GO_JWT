package main

import (

    "log"
	"fmt"
	"database/sql"
	"github.com/lib/pq"
    "os"
	"time"
	"github.com/google/uuid"
	"github.com/sashakosti/auth-service/internal/db"
    "github.com/joho/godotenv"
)

func init() {
    if err := godotenv.Load(); err != nil {
        log.Println("‚ö†Ô∏è  .env —Ñ–∞–π–ª –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ –Ω–µ–≥–æ")
    }
}

func main() {
	dbURL := os.Getenv("DATABASE_URL")
	if dbURL == "" {
		log.Fatal("‚ùå DATABASE_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
	}

	db, err := sql.Open("postgres", dbURL)
	if err != nil {
		log.Fatal("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î:", err)
	}

	err = db.Ping()
	if err != nil {
		log.Fatal("‚ùå –ë–î –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞:", err)
	}

	fmt.Println("‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL!")
}

func token_test() {
	
	// –¢–µ—Å—Ç–æ–≤–∞—è –≤—Å—Ç–∞–≤–∫–∞
	token := db.RefreshToken{
		UserID:    "123e4567-e89b-12d3-a456-426614174000",
		TokenHash: "s3cret",
		ExpiresAt: time.Now().Add(24 * time.Hour),
	}

	err = db.InsertRefreshToken(conn, token)
	if err != nil {
		log.Fatalf("‚ùå –û—à–∏–±–∫–∞ –≤—Å—Ç–∞–≤–∫–∏ —Ç–æ–∫–µ–Ω–∞: %v", err)
	}

	fmt.Println("‚úÖ –¢–æ–∫–µ–Ω –≤—Å—Ç–∞–≤–ª–µ–Ω")

	// –¢–µ—Å—Ç–æ–≤—ã–π –≤—ã–±–æ—Ä
	rt, err := db.GetRefreshTokenByHash(conn, "s3cret")
	if err != nil {
		log.Fatalf("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞: %v", err)
	}

	fmt.Printf("üîç –ü–æ–ª—É—á–µ–Ω —Ç–æ–∫–µ–Ω: %+v\n", rt)

	// –¢–µ—Å—Ç–æ–≤—ã–π —É–¥–∞–ª–µ–Ω–∏–µ
	err = db.DeleteRefreshToken(conn, "s3cret")
	if err != nil {
		log.Fatalf("‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞: %v", err)
	}

	fmt.Println("‚úÖ –¢–æ–∫–µ–Ω —É–¥–∞–ª–µ–Ω")
}
